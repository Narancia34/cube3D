### Core Functions

*   `mlx_init(width, height, title, resize)`: Initializes the MLX library and creates a new window.
*   `mlx_loop(mlx)`: Starts the main event loop, which handles rendering and user input.
*   `mlx_terminate(mlx)`: Cleans up and terminates the MLX library.
*   `mlx_close_window(mlx)`: Closes the window and stops the event loop.

### Window Management

*   `mlx_set_window_pos(mlx, x, y)`: Sets the position of the window.
*   `mlx_get_window_pos(mlx, &x, &y)`: Retrieves the position of the window.
*   `mlx_set_window_size(mlx, width, height)`: Sets the size of the window.
*   `mlx_set_window_title(mlx, title)`: Sets the title of the window.
*   `mlx_set_window_limit(mlx, min_w, min_h, max_w, max_h)`: Sets the minimum and maximum size of the window.

### Image and Texture Management

*   `mlx_load_png(path)`: Loads a PNG file as a texture.
*   `mlx_load_xpm42(path)`: Loads an XPM file as a texture.
*   `mlx_delete_texture(texture)`: Deletes a texture.
*   `mlx_texture_to_image(mlx, texture)`: Creates an image from a texture.
*   `mlx_new_image(mlx, width, height)`: Creates a new, empty image.
*   `mlx_delete_image(mlx, image)`: Deletes an image.
*   `mlx_put_pixel(image, x, y, color)`: Draws a pixel on an image.
*   `mlx_image_to_window(mlx, image, x, y)`: Displays an image in the window.
*   `mlx_resize_image(image, new_width, new_height)`: Resizes an image.

### Input Handling (Hooks)

MLX42 uses a hook system to respond to events. You register a function (a "hook") to be called when a specific event occurs.

*   `mlx_loop_hook(mlx, function, param)`: Registers a function to be called on every frame.
*   `mlx_key_hook(mlx, function, param)`: Registers a function to be called when a key is pressed.
*   `mlx_mouse_hook(mlx, function, param)`: Registers a function to be called for mouse button events.
*   `mlx_scroll_hook(mlx, function, param)`: Registers a function to be called for mouse scroll events.
*   `mlx_cursor_hook(mlx, function, param)`: Registers a function to be called when the mouse cursor moves.
*   `mlx_close_hook(mlx, function, param)`: Registers a function to be called when the user attempts to close the window.
*   `mlx_resize_hook(mlx, function, param)`: Registers a function to be called when the window is resized.

### Other Utility Functions

*   `mlx_get_time()`: Gets the time elapsed since MLX was initialized.
*   `mlx_strerror(error_code)`: Gets a string description of an error code.
*   `mlx_put_string(mlx, str, x, y)`: Renders a string to the window.

The `libs/MLX42/docs` directory also contains more detailed documentation on these topics in files like `Basics.md`, `Hooks.md`, `Images.md`, and `Textures.md`.

Do you have a question about a specific function or a particular task you're trying to accomplish?
